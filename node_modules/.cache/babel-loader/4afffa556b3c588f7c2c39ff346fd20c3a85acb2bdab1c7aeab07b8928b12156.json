{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/reactapp/usermanagement/src/components/AdminScreen.js\",\n  _s = $RefreshSig$();\n// src/components/AdminScreen.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimporyt;\nconst AdminScreen = () => {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  useEffect(() => {\n    axios.get('/api/companies').then(response => setCompanies(response.data)).catch(error => console.error(error));\n  }, []);\n  const handleApprove = companyId => {\n    axios.post(`/api/companies/${companyId}/approve`).then(() => {\n      alert('Company Approved');\n      setCompanies(companies.map(c => c.id === companyId ? {\n        ...c,\n        status: 'APPROVED'\n      } : c));\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin - Company List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: companies.map(company => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [company.name, \" - \", company.status, company.status !== 'APPROVED' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleApprove(company.id),\n          children: \"Approve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, company.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminScreen, \"fvSMykEKVRSxSgZ7G/ZC4cRqlrw=\");\n_c = AdminScreen;\nexport default AdminScreen;\nvar _c;\n$RefreshReg$(_c, \"AdminScreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","imporyt","AdminScreen","_s","companies","setCompanies","get","then","response","data","catch","error","console","handleApprove","companyId","post","alert","map","c","id","status","children","fileName","_jsxFileName","lineNumber","columnNumber","company","name","onClick","_c","$RefreshReg$"],"sources":["/Users/apple/Documents/reactapp/usermanagement/src/components/AdminScreen.js"],"sourcesContent":["// src/components/AdminScreen.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimporyt\nconst AdminScreen = () => {\n  const [companies, setCompanies] = useState([]);\n\n  useEffect(() => {\n    axios.get('/api/companies')\n      .then(response => setCompanies(response.data))\n      .catch(error => console.error(error));\n  }, []);\n\n  const handleApprove = (companyId) => {\n    axios.post(`/api/companies/${companyId}/approve`)\n      .then(() => {\n        alert('Company Approved');\n        setCompanies(companies.map(c => c.id === companyId ? { ...c, status: 'APPROVED' } : c));\n      })\n      .catch(error => console.error(error));\n  };\n\n  return (\n    <div>\n      <h1>Admin - Company List</h1>\n      <ul>\n        {companies.map(company => (\n          <li key={company.id}>\n            {company.name} - {company.status}\n            {company.status !== 'APPROVED' && (\n              <button onClick={() => handleApprove(company.id)}>Approve</button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AdminScreen;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1BC,OAAO;AACP,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACQ,GAAG,CAAC,gBAAgB,CAAC,CACxBC,IAAI,CAACC,QAAQ,IAAIH,YAAY,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC7CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,aAAa,GAAIC,SAAS,IAAK;IACnChB,KAAK,CAACiB,IAAI,CAAC,kBAAkBD,SAAS,UAAU,CAAC,CAC9CP,IAAI,CAAC,MAAM;MACVS,KAAK,CAAC,kBAAkB,CAAC;MACzBX,YAAY,CAACD,SAAS,CAACa,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKL,SAAS,GAAG;QAAE,GAAGI,CAAC;QAAEE,MAAM,EAAE;MAAW,CAAC,GAAGF,CAAC,CAAC,CAAC;IACzF,CAAC,CAAC,CACDR,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC;EAED,oBACEX,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BzB,OAAA;MAAAqB,QAAA,EACGjB,SAAS,CAACa,GAAG,CAACS,OAAO,iBACpB1B,OAAA;QAAAqB,QAAA,GACGK,OAAO,CAACC,IAAI,EAAC,KAAG,EAACD,OAAO,CAACN,MAAM,EAC/BM,OAAO,CAACN,MAAM,KAAK,UAAU,iBAC5BpB,OAAA;UAAQ4B,OAAO,EAAEA,CAAA,KAAMf,aAAa,CAACa,OAAO,CAACP,EAAE,CAAE;UAAAE,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAClE;MAAA,GAJMC,OAAO,CAACP,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACtB,EAAA,CAjCID,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAmCjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}