{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/reactapp/usermanagement/src/components/AdminScreen.js\";\n// src/components/AdminScreen.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminScreen = ({\n  companies,\n  setCompanies\n}) => {\n  const handleApprove = id => {\n    setCompanies(companies.map(company => company.id === id ? {\n      ...company,\n      status: 'APPROVED'\n    } : company));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin - Company List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: companies.map(company => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [company.name, \" - \", company.status, company.status === 'UNAPPROVED' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleApprove(company.id),\n          children: \"Approve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this)]\n      }, company.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = AdminScreen;\nexport default AdminScreen;\nvar _c;\n$RefreshReg$(_c, \"AdminScreen\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AdminScreen","companies","setCompanies","handleApprove","id","map","company","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","_c","$RefreshReg$"],"sources":["/Users/apple/Documents/reactapp/usermanagement/src/components/AdminScreen.js"],"sourcesContent":["// src/components/AdminScreen.js\nimport React from 'react';\n\nconst AdminScreen = ({ companies, setCompanies }) => {\n  const handleApprove = (id) => {\n    setCompanies(\n      companies.map((company) =>\n        company.id === id ? { ...company, status: 'APPROVED' } : company\n      )\n    );\n  };\n\n  return (\n    <div className=\"admin-container\">\n      <h2>Admin - Company List</h2>\n      <ul>\n        {companies.map((company) => (\n          <li key={company.id}>\n            {company.name} - {company.status}\n            {company.status === 'UNAPPROVED' && (\n              <button onClick={() => handleApprove(company.id)}>Approve</button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AdminScreen;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAa,CAAC,KAAK;EACnD,MAAMC,aAAa,GAAIC,EAAE,IAAK;IAC5BF,YAAY,CACVD,SAAS,CAACI,GAAG,CAAEC,OAAO,IACpBA,OAAO,CAACF,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGE,OAAO;MAAEC,MAAM,EAAE;IAAW,CAAC,GAAGD,OAC3D,CACF,CAAC;EACH,CAAC;EAED,oBACEP,OAAA;IAAKS,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BV,OAAA;MAAAU,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7Bd,OAAA;MAAAU,QAAA,EACGR,SAAS,CAACI,GAAG,CAAEC,OAAO,iBACrBP,OAAA;QAAAU,QAAA,GACGH,OAAO,CAACQ,IAAI,EAAC,KAAG,EAACR,OAAO,CAACC,MAAM,EAC/BD,OAAO,CAACC,MAAM,KAAK,YAAY,iBAC9BR,OAAA;UAAQgB,OAAO,EAAEA,CAAA,KAAMZ,aAAa,CAACG,OAAO,CAACF,EAAE,CAAE;UAAAK,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAClE;MAAA,GAJMP,OAAO,CAACF,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACG,EAAA,GAxBIhB,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}